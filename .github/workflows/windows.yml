name: windows build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4.1.1
    - name: install packages
      run:  C:\msys64\usr\bin\bash -lc "PATH+=:/mingw64/bin ; pacman --noconfirm -S mingw-w64-x86_64-gcc mingw-w64-x86_64-autotools mingw-w64-x86_64-pkg-config p7zip base-devel libtool"
    - name: configure and make
      run:  C:\msys64\usr\bin\bash -lc "PATH+=:/mingw64/bin ; cd /D/a/libDDD/libDDD ; autoreconf -vfi && ./configure --prefix=/D/a/libDDD/libDDD/usr/local/ --enable-nolto --enable-mingw-native && make -j 4 && make install || cat config.log"
    - name: package zip
      run:  C:\msys64\usr\bin\bash -lc "cd /D/a/libDDD/libDDD ; rm usr/local/lib/libDDD_d* ; tar -a -c -f windows.zip usr/ ; mkdir site ; mv windows.zip site/"
    - name: Upload Artifacts üî∫ # The project is then uploaded as an artifact named 'site'.
      uses: actions/upload-artifact@v4
      with:
        name: site
        path: site/
    
  deploy:
    needs: [build] # The second job must depend on the first one to complete before running, and uses ubuntu-latest instead of windows.

    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4.1.1
        with:
          persist-credentials: false
      - name: Download Artifacts üîª # The built project is downloaded into the 'site' folder.
        uses: actions/download-artifact@v4
        with:
          name: site
      - name: move to website
        run: ls -lah ; mkdir -p windows ; cp windows.zip windows/ ; ls -lah windows/
      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          branch: Windows
          folder: windows/ # The deployment folder should match the name of the artifact. Even though our project builds into the 'build' folder the artifact name of 'site' must be placed here.
          clean: true # Automatically remove deleted files from the deploy branch
          single-commit: true 
      - name: Trigger libITS
        uses: mvasigh/dispatch-action@main
        with:
          # You should create a personal access token and store it in your repository
          token: ${{ secrets.NOTIF_PAT }}
          repo: libITS
          owner: lip6
          event_type: Windows
